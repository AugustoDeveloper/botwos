// <auto-generated />
using Botwos.Weather.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Botwos.Weather.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(DbResponsesContext))]
    [Migration("20201101015317_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Botwos.Weather.Infrastructure.Persistence.Entities.FinalPhrase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<int>("BeginCloudPercentageRange")
                        .HasColumnName("begin_cloud_percentage_range")
                        .HasColumnType("integer");

                    b.Property<double>("BeginPrecipitationMMRange")
                        .HasColumnName("begin_precipitation_mm_range")
                        .HasColumnType("double precision");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<int>("EndCloudPercentageRange")
                        .HasColumnName("end_cloud_percentage_range")
                        .HasColumnType("integer");

                    b.Property<double>("EndPrecipitationMMRange")
                        .HasColumnName("end_precipitation_mm_range")
                        .HasColumnType("double precision");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnName("language")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnName("short_code")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<string>("TextFormat")
                        .IsRequired()
                        .HasColumnName("text_format")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("final_phrases");
                });

            modelBuilder.Entity("Botwos.Weather.Infrastructure.Persistence.Entities.Greeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<int>("Kind")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("kind")
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnName("language")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnName("short_code")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<string>("TextFormat")
                        .IsRequired()
                        .HasColumnName("text_format")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("ShortCode", "Kind", "Language")
                        .IsUnique()
                        .HasName("ix_uq_greetings_short_code");

                    b.ToTable("greetings");
                });

            modelBuilder.Entity("Botwos.Weather.Infrastructure.Persistence.Entities.InitialPhrase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<double>("BeginFeelsLikeCelsiusRange")
                        .HasColumnName("begin_feels_like_celsius_range")
                        .HasColumnType("double precision");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<double>("EndFeelsLikeCelsiusRange")
                        .HasColumnName("end_feels_like_celsius_range")
                        .HasColumnType("double precision");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnName("language")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnName("short_code")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<string>("TextFormat")
                        .IsRequired()
                        .HasColumnName("text_format")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("initial_phrases");
                });
#pragma warning restore 612, 618
        }
    }
}
